# Generated by Fabric8 CRDGenerator, manual edits might get overwritten!
apiVersion: "apiextensions.k8s.io/v1"
kind: "CustomResourceDefinition"
metadata:
  name: "agentdeployments.fusion.tuna.ai"
spec:
  group: "fusion.tuna.ai"
  names:
    kind: "AgentDeployment"
    plural: "agentdeployments"
    shortNames:
    - "ad"
    singular: "agentdeployment"
  scope: "Namespaced"
  versions:
  - additionalPrinterColumns:
    - jsonPath: ".spec.agentCard.url"
      name: "Url"
      priority: 0
      type: "string"
    - jsonPath: ".spec.environmentName"
      name: "Env"
      priority: 0
      type: "string"
    name: "v1"
    schema:
      openAPIV3Schema:
        properties:
          spec:
            properties:
              a2a:
                properties:
                  queueManager:
                    properties:
                      provider:
                        enum:
                        - "InMemory"
                        - "Redis"
                        type: "string"
                      redis:
                        properties:
                          redisUrl:
                            type: "string"
                          relayChannelKeyPrefix:
                            type: "string"
                          taskIdTtlInSecond:
                            type: "integer"
                          taskRegistryKey:
                            type: "string"
                        required:
                        - "redisUrl"
                        - "taskIdTtlInSecond"
                        type: "object"
                        x-kubernetes-validations:
                        - message: "self.taskIdRegistryKey and self.channelKeyPrefix\
                            \ cannot be included in resource definition."
                          rule: "!has(self.taskRegistryKey) && !has(self.relayChannelKeyPrefix)"
                    required:
                    - "provider"
                    type: "object"
                    x-kubernetes-validations:
                    - rule: "self.provider=='InMemory' || (self.provider=='redis'\
                        \ && has(self.redis))"
                  taskStore:
                    properties:
                      provider:
                        enum:
                        - "InMemory"
                        - "MySQL"
                        - "Postgres"
                        - "SQLite"
                        type: "string"
                      sql:
                        properties:
                          createTable:
                            type: "boolean"
                          databaseUrl:
                            type: "string"
                          taskStoreTableName:
                            type: "string"
                        required:
                        - "createTable"
                        - "databaseUrl"
                        type: "object"
                        x-kubernetes-validations:
                        - message: "sql.taskStoreTableName cannot be included in resource\
                            \ definition."
                          rule: "!has(self.taskStoreTableName)"
                    required:
                    - "provider"
                    type: "object"
                    x-kubernetes-validations:
                    - rule: "self.provider=='InMemory' || (self.provider=='sql' &&\
                        \ has(self.sql))"
                required:
                - "queueManager"
                - "taskStore"
                type: "object"
              agentCard:
                properties:
                  capabilities:
                    properties:
                      pushNotifications:
                        type: "boolean"
                      stateTransitionHistory:
                        type: "boolean"
                      streaming:
                        type: "boolean"
                    type: "object"
                  defaultInputModes:
                    items:
                      type: "string"
                    minItems: 1
                    type: "array"
                  defaultOutputModes:
                    items:
                      type: "string"
                    minItems: 1
                    type: "array"
                  description:
                    type: "string"
                  documentationUrl:
                    type: "string"
                  iconUrl:
                    type: "string"
                  name:
                    type: "string"
                  provider:
                    properties:
                      organization:
                        type: "string"
                      url:
                        type: "string"
                    required:
                    - "organization"
                    - "url"
                    type: "object"
                  security:
                    items:
                      additionalProperties:
                        items:
                          type: "string"
                        type: "array"
                      type: "object"
                    type: "array"
                  securitySchemes:
                    additionalProperties:
                      properties:
                        description:
                          type: "string"
                        type:
                          type: "string"
                      required:
                      - "type"
                      type: "object"
                    type: "object"
                  skills:
                    items:
                      properties:
                        description:
                          type: "string"
                        examples:
                          items:
                            type: "string"
                          type: "array"
                        id:
                          type: "string"
                        inputModes:
                          items:
                            type: "string"
                          type: "array"
                        name:
                          type: "string"
                        outputModes:
                          items:
                            type: "string"
                          type: "array"
                        tags:
                          items:
                            type: "string"
                          type: "array"
                      required:
                      - "description"
                      - "id"
                      - "name"
                      - "tags"
                      type: "object"
                    minItems: 1
                    type: "array"
                  supportsAuthenticatedExtendedCard:
                    type: "boolean"
                  url:
                    type: "string"
                  version:
                    type: "string"
                required:
                - "capabilities"
                - "defaultInputModes"
                - "defaultOutputModes"
                - "description"
                - "name"
                - "provider"
                - "skills"
                - "version"
                type: "object"
                x-kubernetes-validations:
                - message: "URL cannot be set in AgentCard. It will be dynamic generated\
                    \ during reconciliation."
                  rule: "!has(self.url)"
              entrypoint:
                type: "string"
              environmentName:
                type: "string"
              git:
                properties:
                  watchedBranchName:
                    type: "string"
                type: "object"
            required:
            - "a2a"
            - "agentCard"
            - "entrypoint"
            - "environmentName"
            - "git"
            type: "object"
          status:
            properties:
              driverType:
                enum:
                - "AlibabaCloudFunctionCompute"
                - "AwsLambda"
                - "PodPool"
                type: "string"
              fc:
                properties:
                  functionName:
                    type: "string"
                type: "object"
              function:
                properties:
                  functionName:
                    type: "string"
                type: "object"
              lambda:
                properties:
                  functionName:
                    type: "string"
                type: "object"
            type: "object"
        type: "object"
    served: true
    storage: true
    subresources:
      status: {}
