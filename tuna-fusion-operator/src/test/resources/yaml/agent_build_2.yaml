apiVersion: fusion.tuna.ai/v1
kind: AgentBuild
metadata:
  name: test-build-2
  namespace: tuna-fission
  ownerReferences:
    - kind: AgentDeployment
      name: test-deploy-1
      apiVersion: fusion.tuna.ai/v1
      uid: 70ee9a7b-22b8-436f-997e-b9e8b75d7847
spec:
  serviceAccountName: fission-user
  gitCommitId: xxxxx
  builderImage: robinqu/tuna-fusion-toolchain:1750673901
  buildScript: |-
    #!/bin/bash
    set -e
    set -x
    
    cd /tmp
    
    cat << EOF > main.py
    from fastapi import Request, Response
    async def handler(request:
    Request):
      return Response("hello world", status_code=200)
    EOF
    
    cat << EOF > build.sh
    pip install -y fastapi
    EOF
    
    if ! fission fn get --name "$FUNCTION_NAME" -n "$NAMESPACE"; then
      echo "Function $FUNCTION_NAME does not exist. Creating it now..."
      # Create the function
      fission fn create \
      -n "$NAMESPACE" \
      --name "$FUNCTION_NAME" \
      --env "$FUNCTION_ENV" \
      --code main.py \
      --entrypoint "main.handler" \
      --buildcmd "./build.sh"
      # Should get function properly
      fission fn get --name "$FUNCTION_NAME" -n "$NAMESPACE" 
    else
      echo "Function $FUNCTION_NAME is to be updated."
      fission fn update \
      -n "$NAMESPACE" \
      --name "$FUNCTION_NAME" \
      --env "$FUNCTION_ENV" \
      --code main.py \
      --entrypoint "main.handler" \
      --buildcmd "./build.sh"
    fi
    
    # Create route if necessary
    if ! fission route get --name "$FUNCTION_NAME" -n "$NAMESPACE"; then
      echo "Route $FUNCTION_NAME does not exist. Creating it now..."
      # Create the function
      fission route create \
      -n "$NAMESPACE" \
      --name "$FUNCTION_NAME" \
      --function "$FUNCTION_NAME" \
      --url "/$FUNCTION_NAME" \
      --prefix "/$CATALOGUE_NAME"
    else
      echo "Route $FUNCTION_NAME already exists."
    fi

