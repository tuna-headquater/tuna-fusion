apiVersion: fusion.tuna.ai/v1
kind: AgentEnvironment
metadata:
  name: env3
  namespace: tuna-fission
spec:
  engineType: Fission
  engineOptions:
    fission:
      poolSize: 3
      runtimeImage: ghcr.io/fission/python-fastapi-env
  buildRecipe:
    buildScript: |-
      #!/bin/bash
      set -e
      set -x

      cd /tmp

      fission archive download --id="$FUNCTION_SOURCE_ARCHIVE_ID" -o src.zip
      mkdir src && unzip src.zip -d ./src
      export SRC_PKG=/tmp/src
      if [ -f ${SRC_PKG}/requirements.txt ]; then
        uv pip install -i https://mirrors.tuna.tsinghua.edu.cn/pypi/web/simple -r ${SRC_PKG}/requirements.txt --target ${SRC_PKG}
      fi
      zip -r deploy.zip ${SRC_PKG}
      
      if ! fission fn get --name "$FUNCTION_NAME" -n "$NAMESPACE"; then
        echo "Function $FUNCTION_NAME does not exist. Creating it now..."      
        # Create the function
        fission fn create \
        -n "$NAMESPACE" \
        --name "$FUNCTION_NAME" \
        --env "$FUNCTION_ENV" \
        --src src.zip \
        --deploy deploy.zip \
        --entrypoint "main.handler"
      else
        echo "Function $FUNCTION_NAME is to be updated."
        fission fn update \
        -n "$NAMESPACE" \
        --name "$FUNCTION_NAME" \
        --env "$FUNCTION_ENV" \
        --src src.zip \
        --deploy deploy.zip \
        --entrypoint "main.handler"
      fi

      # Create route if necessary
      if ! fission route get --name "$ROUTE_NAME" -n "$NAMESPACE"; then
        echo "Route $ROUTE_NAME does not exist. Creating it now..."
        # Create the function
        fission route create \
        -n "$NAMESPACE" \
        --name "$ROUTE_NAME" \
        --function "$FUNCTION_NAME" \
        --url "/$CATALOGUE_NAME/$FUNCTION_NAME"
      else
        echo "Route $ROUTE_NAME already exists."
      fi

      echo "Testing fn"
      fission fn test -n "$NAMESPACE" --name "$FUNCTION_NAME"

    builderImage: robinqu/tuna-fusion-toolchain-python:1751158637
    serviceAccountName: fission-user

